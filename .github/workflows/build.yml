name: build

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-10.15
          - windows-2022
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: fwilhe2/setup-kotlin@main
        with:
          version: 1.6.21

      - name: Install dependencies for ${{ runner.os }}
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            choco install zip
            # Overwrite the WSL bash.exe
            cp /c/msys64/usr/bin/bash.exe /c/Windows/System32/bash.exe
          fi

      - name: Run tests
        timeout-minutes: 10
        shell: bash
        run: |
          export KSCRIPT_HOME="$GITHUB_WORKSPACE"
          
          if [[ "$OSTYPE" == "linux-gnu"* ]]; then
            ./test/linux_suite.sh
          elif [[ "$OSTYPE" == "darwin"* ]]; then
            kscript --help
            kscript "println(1+1)"
          elif [[ "$OSTYPE" == "cygwin" ]]; then
            kscript --help
            kscript "println(1+1)"                  
          elif [[ "$OSTYPE" == "msys" ]]; then
            kscript --help
            kscript "println(1+1)"                  
          elif [[ "$OSTYPE" == "win32" ]]; then
            kscript --help
            kscript "println(1+1)"                  
          elif [[ "$OSTYPE" == "freebsd"* ]]; then
            kscript --help
            kscript "println(1+1)"
          else
            echo "Unknown OS"
            exit 1
          fi
