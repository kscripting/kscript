name: installer

on:
  workflow_dispatch:
    inputs:
      kscript_version:
        description: 'KScript version to test'
        required: true
        default: '4.1.0'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-12
          - windows-2022
        variant:
          - sdkman
        include:
          - os: macos-12
            variant: brew

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    env:
      KSCRIPT_VERSION: ${{ github.event.inputs.kscript_version }}

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: fwilhe2/setup-kotlin@main
        with:
          version: 1.6.21

      - name: Prerequisites for ${{ runner.os }}
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            choco install zip
            # Overwrite the WSL bash.exe
            cp /c/msys64/usr/bin/bash.exe /c/Windows/System32/bash.exe
          fi

      - name: Check SdkMan for ${{ runner.os }}
        if: matrix.variant == 'sdkman'
        shell: bash
        run: |
          bash -c "curl -s "https://get.sdkman.io" | bash"
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          
          sdk install kscript ${{ env.KSCRIPT_VERSION }}
          kscript --help
          kscript -d "println(1+1)"
          sdk uninstall kscript ${{ env.KSCRIPT_VERSION }}

      - name: Check brew for ${{ runner.os }}
        shell: bash
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install holgerbrandl/tap/kscript
          kscript --help
          kscript -d "println(1+1)"
          brew uninstall holgerbrandl/tap/kscript
